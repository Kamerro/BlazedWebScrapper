@page "/ksiegarnia"
@using BlazedWebScrapper.Data;
@using HtmlAgilityPack;
@using BlazedWebScrapper.Pages.Components;
@using System.Drawing;
@using System.Text;
@inject IBasicWebScrapperSite webScrapperImplementation
<body>
    <div>
        <Header OnInputEvent="OnInputEvent" SearchPredefinedBook="SearchPredefinedBook" InputValue="@inputValue" AuthorName="@searchBook.Author.Name" Title="@searchBook.Title"></Header>
        <div>
            <h3>Lub wybierz z proponowanych:</h3>
            <Table ListOfBooks="@listOfBooks" SearchBook="searchBook" SetAuthor="bookService.SetAuthor" SetTitle="bookService.SetTitle"></Table>
        </div>
        <div>
            @if (isSearchDone)
            {
                <TableResult BooksNames="czytelnikSearcher.BooksNames" PricePerBook="czytelnikSearcher.PricePerBook"></TableResult>
            }
        </div>
    </div>
</body>
@code {
    CzytelnikSearcher czytelnikSearcher = new CzytelnikSearcher();
    TabConfigurator tabConfigurator = new TabConfigurator();
    ConstsBookScrapper consts = new ConstsBookScrapper();
    Book searchBook = new Book();
    List<Book> listOfBooks = new List<Book>();
    Query query = new Query();
    BookService bookService = new BookService();
    public string inputValue = "";
    bool isSearchDone = false;
    void SearchPredefinedBook()
    {
        webScrapperImplementation.FullUrlToReadFrom = czytelnikSearcher.BuildFullUrlToSearch(query, inputValue, searchBook.Author.Name, searchBook.Title);
        searchText(); 
    }
    protected override void OnInitialized()
    {
        tabConfigurator.TileColor = Color.Green.Name;
        listOfBooks.InitializeBooks();
        query.UrlWithSiteName = consts.CzytelnikSite; 
    }
    private void OnInputEvent(ChangeEventArgs changeEvent)
    {
        inputValue = (string)changeEvent.Value;
    }
    void searchText()
    {
        czytelnikSearcher.SearchText(webScrapperImplementation.FullUrlToReadFrom,webScrapperImplementation,consts);
        isSearchDone = true;
    }
}