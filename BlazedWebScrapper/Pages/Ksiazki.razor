@page "/ksiegarnia"
@using BlazedWebScrapper.Data;
@using HtmlAgilityPack;
@using BlazedWebScrapper.Pages.Components;
@inject IBasicWebScrapperSite webScrapperImplementation
@inject TabConfigurator tabConfigurator
@inject ConstsBookScrapper consts
<body>
    <SampleComponent MyProperty=":D" Action=@KeepInMindSafety></SampleComponent>
    <div>
        <div>
            <div style="width:100%;height:50px;text-align:center;">
                <h2>Witaj dobry człowieku tutaj możesz wyszukać książki!</h2>
            </div
            <div style="height:10px;width:100%">
            </div>
            <div style="margin-left:30%;width:100%">
                <input type="text" style="width:30%;height:60px; margin-bottom:30px" placeholder="@Author @Title" />
                <button type="button" @onclick="() => searchPredefinedBook(Mroz)"><img src="css/open-iconic/font/fonts/searchIcon.png"></button>
            </div>
        </div>
        <div>
            <h3>Lub wybierz z proponowanych:</h3>
            <table style="text-align:center;">
                <tr>
                    <th>Autor</th>
                    <th>Tytuł</th>
                </tr>
                <tr>
                    <td @onclick="() => setAuthor(GabrielGarciaMarquez)"
                        @onmouseover="changeColor" @onmouseleave="changeColorBack"
                        style="background-color:@tabConfigurator.TileColor">
                        Gabriel García Márquez
                    </td>

                    <td @onclick="() => setTitle(StoLatSamotnosci)">Sto lat samotności</td>
                </tr>
                <tr>
                    <td>George Orwell</td>
                    <td>Rok 1984</td>
                </tr>
                <tr>
                    <td>J.R.R. Tolkien</td>
                    <td>Władca Pierścieni: Drużyna Pierścienia</td>
                </tr>
                <tr>
                    <td>Haruki Murakami</td>
                    <td>Kafka nad morzem</td>
                </tr>
                <tr>
                    <td>Margaret Atwood</td>
                    <td>Opowieść Podręcznej</td>
                </tr>
            </table>
        </div>
    </div>
</body>

@code {
    public string Mroz = "Mroz";
    //Wydawnictwoniezwykle.
    //ksiegarnia.pwn.pl
    //nk.com.pl
    //albatros (ciężkie)
    //czytelnik.pl/
    string Author = "";
    public string StoLatSamotnosci = "Sto lat samotności";
    string Title = "";
    public string GabrielGarciaMarquez = "Gabriel Garcia Marquez";
    public string fullPredefined = String.Empty;
    string KeepInMindSafety()
    {
        return "Keep in mind safety dude";
    }
    void searchPredefinedBook(string book)
    {
        fullPredefined = book;
        searchText();

    }
    void setAuthor(string author)
    {
        Author = author;
    }
    void setTitle(string title)
    {
        Title = title;
    }
    void changeColor()
    {
        tabConfigurator.TileColor = "Black";
    }
    void changeColorBack()
    {
        tabConfigurator.TileColor = "Green";

    }
    protected override void OnInitialized()
    {
        tabConfigurator.TileColor = "Green";
    }
    void searchText()
    {
        webScrapperImplementation.SiteName = $"https://czytelnik.pl/pl/searchquery/{fullPredefined}/1/phot/5?url={fullPredefined}";
        string test = webScrapperImplementation.SiteName;
        var web = new HtmlWeb();
        var doc = web.Load(test);
        var nodesProducts = webScrapperImplementation.AllNodes(doc,consts.ProductWrapper,
                                                                   consts.ClassAttribute,
                                                                   consts.ATag);
        var Books = webScrapperImplementation.AllNodes(doc,"productname","class","span");
        List<string> booksNames = webScrapperImplementation.GetNamesFromNodes(Books);
        List<HtmlNode> nodePricesDiv = webScrapperImplementation.AllNodes(doc, "price f-row", "class", "div");
        List<HtmlNode> nodePricesValue = webScrapperImplementation.GetFirstDescendant(nodePricesDiv,"em");

        List<string> pricePerBook = webScrapperImplementation.GetNamesFromNodes(nodePricesValue);
    }
    
}